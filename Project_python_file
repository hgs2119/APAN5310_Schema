#load librarys
import pandas as pd
import numpy as np
import psycopg2
import os

#load file 
df = pd.read_csv("APAN5310 - HW5 Data.csv")

#connect to database
conn = psycopg2.connect(
    host="localhost", 
    database="postgres", #please change database 
    user="postgres", #please change user name
    password="123") #please change password

#create a cursor
conn.autocommit = True
cur = conn.cursor()

#if table exist, drop table
query =  "DROP TABLE IF EXISTS Investigations;"
query += "DROP TABLE IF EXISTS Publications;"
query += "DROP TABLE IF EXISTS Determinations;"
query += "DROP TABLE IF EXISTS Country;"
query += "DROP TABLE IF EXISTS Products;"
query += "DROP TABLE IF EXISTS Date_Dim;"
query += "DROP TABLE IF EXISTS Commodities;"
query += "DROP TABLE IF EXISTS Case_Groups;"
query += "DROP TABLE IF EXISTS Staff_Assigned;"
query += "DROP TABLE IF EXISTS Commissioners;"
query += "DROP TABLE IF EXISTS Law_Firms;"
query += "DROP TABLE IF EXISTS Petitioning_Firms;"


cur.execute(query)

#create Country table

query = "CREATE TABLE Country ( \
    Country_Code char(3) NOT NULL,\
    Country_Name varchar(100),\
    Region varchar(100),\
    Trade_Relationship varchar(50),\
	PRIMARY KEY (Country_Code)\
    );"
cur.execute(query)


#make dataframe for Country
df_Country = df[['Country', 'Trade_Relationship']].copy()
df_Country.drop_duplicates(inplace=True)
df_Country = df_Country.reset_index(drop=True)
df_Country.reset_index(inplace=True)


#insert data into Country table
Country_dict = {}
for index, row in df_Country.iterrows():
    dpart_dict[row['Country']] = row['index']
    query = f"insert into Country (Country_Code, Country_Name, Region, Trade_Relationship) values ({row['index']}, '{row['Country']}', {row['Trade_Relationship']});"
    cur.execute(query)


#create Products table
query = "CREATE TABLE Products (
    Product_ID char(3) NOT NULL,\
    Product_Name varchar(100),\
    Product_Type varchar(100),\
	PRIMARY KEY (Country_Code)\
        )"
        
cur.execute(query)

#make dataframe for Products
df_Products = df[['Products']].copy()
df_Products.drop_duplicates(inplace=True)
df_Products = df_Products.reset_index(drop=True)
df_Products.reset_index(inplace=True)

#insert data into Products table
Products_dict = {}
for index, row in df_Products.iterrows():
    Products_dict[row['Products']] = row['index']
    query = f"insert into Manufacturer (Product_ID, Product_Name,Product_Type) values ({row['index']}, '{row['Products']}');"
    cur.execute(query)


#create Laptop table
query = "create table Laptop (\
            employee_id INT NOT NULL,\
            serial_number varchar(10) NOT NULL, \
            date_assigned DATE, \
            manufacturer_id INT NOT NULL, \
            model_id INT NOT NULL, \
            department_id INT NOT NULL, \
            PRIMARY KEY (serial_number), \
            FOREIGN KEY (employee_id) REFERENCES Employee (employee_id), \
            FOREIGN KEY (manufacturer_id) REFERENCES Manufacturer (manufacturer_id), \
            FOREIGN KEY (model_id) REFERENCES Model (model_id), \
            FOREIGN KEY (department_id) REFERENCES Department (department_id) \
         );"
cur.execute(query)

#make dataframe for Laptop
df_Laptop = df[['employee_id', 'serial_number','date_assigned','manufacturer', 'model','department']].copy()
df_Laptop.drop_duplicates(inplace=True)

#insert data into Laptop table
for index, row in df_Laptop.iterrows():
    mid = model_dict[row['model']]
    fid = manufacturer_dict[row['manufacturer']]
    did = dpart_dict[row['department']]
    query = "insert into Laptop (employee_id, serial_number,date_assigned, manufacturer_id, model_id, department_id) values "
    query += f"({row['employee_id']}, '{row['serial_number']}','{row['date_assigned']}',{fid},{mid},{did});"
    cur.execute(query)


#create Software table
query = "create table Software (\
            serial_number varchar(10) NOT NULL, \
            installed_software varchar(100) NOT NULL, \
            FOREIGN KEY (serial_number) REFERENCES Laptop (serial_number) \
         );"
cur.execute(query)

#make dataframe for Software
df_Software = df[['serial_number', 'installed_software']].copy()
df_Software = df_Software[df_Software['installed_software'].notna()]
df_Software.drop_duplicates(inplace=True)

#insert data into Software table
for index, row in df_Software.iterrows():
    softlst = row['installed_software'].split(", ")
    for soft in softlst:
        query = f"insert into Software (serial_number, installed_software) values ('{row['serial_number']}', '{soft}');"
        cur.execute(query)

cur.close()
