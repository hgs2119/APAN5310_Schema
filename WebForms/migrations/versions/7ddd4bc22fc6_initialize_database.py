"""initialize database

Revision ID: 7ddd4bc22fc6
Revises: 02b3e5f33765
Create Date: 2022-12-08 14:48:13.636055

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7ddd4bc22fc6'
down_revision = '02b3e5f33765'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('case_groups', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=sa.VARCHAR(length=5),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('product_id',
               existing_type=sa.VARCHAR(length=3),
               type_=sa.Integer(),
               existing_nullable=False)

    with op.batch_alter_table('commissioners', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('investigations', schema=None) as batch_op:
        batch_op.alter_column('product_id',
               existing_type=sa.VARCHAR(length=3),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.alter_column('group_id',
               existing_type=sa.VARCHAR(length=5),
               type_=sa.Integer(),
               existing_nullable=False)

    with op.batch_alter_table('itc_staff', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('petitioners', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=sa.VARCHAR(length=5),
               type_=sa.Integer(),
               existing_nullable=False)

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.alter_column('product_id',
               existing_type=sa.VARCHAR(length=3),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('representations', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=sa.VARCHAR(length=5),
               type_=sa.Integer(),
               existing_nullable=False)

    with op.batch_alter_table('scopes', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=sa.VARCHAR(length=5),
               type_=sa.Integer(),
               existing_nullable=False)

    with op.batch_alter_table('staff_assigned', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=sa.VARCHAR(length=5),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.alter_column('staff_id',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('staff_assigned', schema=None) as batch_op:
        batch_op.alter_column('staff_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
        batch_op.alter_column('group_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=5),
               existing_nullable=False)

    with op.batch_alter_table('scopes', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=5),
               existing_nullable=False)

    with op.batch_alter_table('representations', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=5),
               existing_nullable=False)

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.alter_column('product_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=3),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('petitioners', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=5),
               existing_nullable=False)

    with op.batch_alter_table('itc_staff', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('investigations', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=5),
               existing_nullable=False)
        batch_op.alter_column('product_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=3),
               existing_nullable=False)

    with op.batch_alter_table('commissioners', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('case_groups', schema=None) as batch_op:
        batch_op.alter_column('product_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=3),
               existing_nullable=False)
        batch_op.alter_column('group_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=5),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###
